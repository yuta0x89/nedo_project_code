import json
import sys

# python scripts/extract_coding_topic.py > coding_topic.jsonl


# Pythonの初級者向けの教科書を作ろうと思います。目次を作成してください。
# 目次をサブセクションも含めてPythonの1次元のリストにしてください。
# 章番号を削除してください。

python_beginner = [
    # "はじめに",
    # "Pythonとは",
    # "Pythonのインストールと環境設定",
    # "Pythonの基本的な使い方",
    "基本的なデータ型と演算子",
    "数値型",
    "文字列型",
    "ブール型",
    "演算子",
    "制御フロー",
    "if文",
    "for文",
    "while文",
    "breakとcontinue",
    "関数",
    "関数の定義と呼び出し",
    "引数と戻り値",
    "スコープ",
    "再帰関数",
    "データ構造",
    "リスト",
    "タプル",
    "セット",
    "辞書",
    "モジュールとパッケージ",
    "モジュールのインポート",
    "パッケージの作成と利用",
    "標準ライブラリ",
    "ファイル入出力",
    "ファイルの読み込み",
    "ファイルへの書き込み",
    "CSVファイルの操作",
    "クラスとオブジェクト指向プログラミング",
    "クラスの定義",
    "インスタンスの作成",
    "メソッド",
    "継承",
    "ポリモーフィズム",
    "例外処理",
    "例外の種類",
    "try-except文",
    "独自の例外の作成",
    # "高度なトピック",
    "ジェネレータ",
    "デコレータ",
    "コンテキストマネージャ",
    "並行処理",
    "実践的なアプリケーション開発",
    "Webスクレイピング",
    "データ分析",
    "GUIアプリケーション",
    "Webアプリケーション",
    # "まとめと今後について",
    # "学んだことの復習",
    # Pythonの学習を続けるためのリソース",
    # "Pythonコミュニティへの参加",
]


# Pythonの中級者向けの教科書を作ろうと思います。目次を作成してください。
# 目次をサブセクションも含めてPythonの1次元のリストにしてください。
# 章番号を削除してください。

python_intermediate = [
    # "イントロダクション",
    # "Pythonのベストプラクティス",
    # "PEP 8スタイルガイド",
    # "コードの読みやすさと保守性",
    # "テスト駆動開発（TDD）",
    "オブジェクト指向プログラミング",
    "クラスとインスタンス",
    "継承とポリモーフィズム",
    "特殊メソッドとプロパティ",
    "デザインパターン",
    "関数型プログラミング",
    "高階関数",
    "ラムダ式",
    # "イテレータとジェネレータ",
    "イテレータ",
    "ジェネレータ",
    "デコレータ",
    "データ構造とアルゴリズム",
    # "リスト、タプル、ディクショナリ、セット",
    "リスト",
    "タプル",
    "ディクショナリ",
    "セット",
    # "検索、ソート、ハッシュテーブル",
    "検索",
    "ソート",
    "ハッシュテーブル",
    # "再帰と動的計画法",
    "再帰",
    "動的計画法",
    # "ファイル入出力とシリアライゼーション",
    "ファイル入出力",
    "シリアライゼーション",
    "ファイルの読み書き",
    # "JSON、XML、YAML",
    "JSON",
    "XML",
    "YAML",
    # "pickleとshelve",
    "pickle",
    "shelve",
    "ネットワークプログラミング",
    "socketモジュール",
    # "HTTPプロトコルとrequestsライブラリ",
    "HTTPプロトコル",
    "requestsライブラリ",
    # "WebスクレイピングとBeautiful Soup",
    "Webスクレイピング",
    "Beautiful Soup",
    "データベースプログラミング",
    "SQLとリレーショナルデータベース",
    # "SQLiteとSQLAlchemy",
    "SQLite",
    "SQLAlchemy",
    "NoSQLデータベース",
    # "並行処理と並列処理",
    "並行処理",
    "並列処理",
    # "スレッドとプロセス",
    "スレッド",
    "プロセス",
    "asyncioとasync/await",
    # "マルチプロセッシングとマルチスレッド",
    "マルチプロセッシング",
    "マルチスレッド",
    # "Pythonの拡張",
    # "C言語による拡張",
    # "Cython",
    # "NumPyとSciPy",
    "NumPy",
    "SciPy",
    # "ソフトウェアエンジニアリング",
    # "バージョン管理とGit",
    # "継続的インテグレーションと継続的デリバリー",
    # "デプロイメントとコンテナ化",
    # "まとめと今後の方向性",
    # "Pythonのエコシステムとコミュニティ",
    # "さらなる学習と成長のためのリソース",
    # "未来のPythonとその可能性",
]


# Pythonの上級者向けの教科書を作ろうと思います。目次を作成してください。
# 目次をサブセクションも含めてPythonの1次元のリストにしてください。
# 章番号を削除してください。

python_expert = [
    # "Python上級者のための準備",
    # "Pythonの最新動向とバージョン管理",
    # "高度な開発環境の構築",
    # "効率的なコードを書くためのベストプラクティス",
    # "Pythonの高度な機能",
    "メタクラスと動的クラス生成",
    "デコレータとメタプログラミング",
    "コンテキストマネージャとwith文",
    "高度なジェネレータとコルーチン",
    # "マルチスレッド、マルチプロセス、および並行処理",
    "マルチスレッド",
    "マルチプロセス",
    "並行処理",
    # "Pythonの内部構造とC言語拡張",
    # "データ分析と機械学習",
    "データ分析",
    "機械学習",
    # "NumPy、Pandas、Matplotlibによるデータ分析",
    "NumPyによるデータ分析",
    "Pandasによるデータ分析",
    "Matplotlibによるデータ分析",
    "Scikit-learnによる機械学習",
    "TensorFlow、Kerasによる深層学習",
    # "自然言語処理とテキストマイニング",
    "自然言語処理",
    "テキストマイニング",
    "時系列データ分析と予測",
    "Webアプリケーション開発",
    # "FlaskとDjangoによるWebアプリケーション開発",
    "FlaskによるWebアプリケーション開発",
    "DjangoによるWebアプリケーション開発",
    "RESTful APIの設計と実装",
    "WebSocketとリアルタイム通信",
    # "セキュリティと認証",
    # "デプロイメントとスケーリング",
    # "システム管理と自動化",
    # "Pythonによるシステム管理と自動化",
    # "Ansible、SaltStack、およびその他の構成管理ツール",
    # "クラウドインフラストラクチャの管理と自動化",
    # "監視とログ分析",
    # "継続的インテグレーションとデリバリー",
    # "高度なトピック",
    "Pythonによるブロックチェーン開発",
    "量子コンピューティングとPython",
    "機械学習モデルの解釈と説明",
    "強化学習と深層強化学習",
    "Pythonによるゲーム開発",
]


# Pythonを使ったアルゴリズムの教科書を作ろうと思います。目次を作成してください。
# 目次をサブセクションも含めてPythonの1次元のリストにしてください。
# 章番号を削除してください。

python_algorithm = [
    # "はじめに",
    # "この教科書の目的と対象読者",
    # "Pythonのインストールと環境設定",
    # "アルゴリズムの基本概念",
    "データ構造",
    "配列とリスト",
    "スタックとキュー",
    "リンクドリスト",
    "ハッシュテーブル",
    "ツリーとグラフ",
    "ソートアルゴリズム",
    "バブルソート",
    "選択ソート",
    "挿入ソート",
    "マージソート",
    "クイックソート",
    "ヒープソート",
    "探索アルゴリズム",
    "線形探索",
    "二分探索",
    "ハッシュ探索",
    "深さ優先探索（DFS）",
    "幅優先探索（BFS）",
    "グラフアルゴリズム",
    "グラフの表現方法",
    "最短経路問題（ダイクストラ法、ベルマンフォード法）",
    "最小全域木問題（プリム法、クラスカル法）",
    "強連結成分分解",
    "動的計画法",
    "動的計画法の基本概念",
    "フィボナッチ数列",
    "ナップザック問題",
    "最長共通部分列問題",
    "編集距離問題",
    "貪欲アルゴリズム",
    "貪欲アルゴリズムの基本概念",
    "区間スケジューリング問題",
    "ハフマン符号化",
    "最小スパニングツリー問題",
    "分割統治法",
    "分割統治法の基本概念",
    "クイックソート",
    "マージソート",
    "最大サブ配列問題",
    "バックトラッキング",
    "バックトラッキングの基本概念",
    "Nクイーン問題",
    "数独問題",
    "八目並べ問題",
    # "その他のアルゴリズム",
    "文字列検索アルゴリズム（KMP法、BM法）",
    "幾何学的アルゴリズム（凸包、最近点対）",
    "確率的アルゴリズム（モンテカルロ法、ラスベガス法）",
    # "応用例",
    "機械学習におけるアルゴリズムの活用",
    "画像処理におけるアルゴリズムの活用",
    "自然言語処理におけるアルゴリズムの活用",
    # "まとめ",
    # "アルゴリズム学習の今後",
    # "参考文献とさらに学ぶためのリソース",
]


# Pythonを使ったデータ構造の教科書を作ろうと思います。目次を作成してください。
# 目次をサブセクションも含めてPythonの1次元のリストにしてください。
# 章番号を削除してください。

python_data_structure = [
    # "イントロダクション",
    # "Pythonの概要とデータ構造の重要性",
    # "Pythonのインストールと開発環境の設定",
    # "基本データ型",
    "数値型（int、float）",
    "文字列型（str）",
    "ブール型（bool）",
    "None型",
    "シーケンス型",
    "リスト（list）",
    "タプル（tuple）",
    "範囲（range）",
    "シーケンス型共通の操作",
    "集合型",
    "セット（set）",
    "フローズンセット（frozenset）",
    "集合型共通の操作",
    "辞書型",
    "辞書（dict）",
    "辞書型共通の操作",
    # "高度なデータ構造",
    "名前付きタプル（namedtuple）",
    "デフォルトディクショナリ（defaultdict）",
    "順序付きディクショナリ（OrderedDict）",
    "カウンタ（Counter）",
    "デキュー（deque）",
    # "データ構造のアルゴリズム",
    "探索アルゴリズム（線形探索、二分探索）",
    # "ソートアルゴリズム（バブルソート、クイックソート、マージソート）",
    "バブルソート",
    "クイックソート",
    "マージソート",
    "ハッシュテーブル",
    # "データ構造の応用",
    "スタックとキュー",
    "グラフと木",
    "ヒープ",
    "データ構造のパフォーマンス",
    "時間複雑度と空間複雑度",
    # "パフォーマンス測定と最適化",
    # "付録",
    # "Pythonの構文と文法",
    # "データ構造に関する参考文献とリソース"
]


# Pythonを使った実用アプリケーション開発のクックブックを作ろうと思います。目次を作成してください。
# 目次をサブセクションも含めてPythonの1次元のリストにしてください。
# 章番号を削除してください。

python_cookbook = [
    # "はじめに",
    # "Pythonのインストールと環境設定",
    # "Pythonの基本構文とデータ型",
    "Webアプリケーション開発",
    "Flaskを使ったWebアプリケーションの作成",
    "Djangoを使った大規模Webアプリケーションの作成",
    "Web APIの作成と利用",
    "テンプレートエンジンの使い方",
    # "ユーザー認証とセキュリティ",
    "データ分析と可視化",
    "Pandasを使ったデータ分析",
    "NumPyを使った数値計算",
    "MatplotlibとSeabornを使ったデータ可視化",
    "Scikit-learnを使った機械学習",
    "自然言語処理とテキストマイニング",
    "機械学習と深層学習",
    "Scikit-learnを使った機械学習モデルの構築",
    "TensorFlowとKerasを使った深層学習モデルの構築",
    "画像認識と物体検出",
    "自然言語処理とテキスト分類",
    "強化学習とゲームAI",
    "自動化とスクリプト作成",
    "OSの操作とファイル処理",
    "Webスクレイピングとデータ収集",
    "メール送信とスケジュール管理",
    "システム監視とログ分析",
    "自動化ツールの作成",
    "セキュリティと暗号化",
    "暗号化と復号化の基礎",
    "ハッシュ関数とメッセージダイジェスト",
    "公開鍵暗号と秘密鍵暗号",
    # "セキュリティホールと脆弱性対策",
    # "セキュリティチェックリスト",
    # "テストとデバッグ",
    # "ユニットテストとテスト駆動開発",
    # "デバッグテクニックとツール",
    # "コードレビューと品質管理",
    # "継続的インテグレーションとデプロイ",
    # "応用例とケーススタディ",
    "ソーシャルメディア分析ツール",
    "Eコマースサイト構築",
    "画像認識を使った品質管理",
    "自然言語処理を使ったチャットボット",
    "自動化ツールを使った業務効率化",
    # "付録",
    # "Pythonのバージョン管理と仮想環境",
    # "パッケージ管理と依存関係の解決",
    # "コードスタイルとフォーマット",
    # "コミュニティとリソース",
    # "索引",
]


print(f"length of python_beginner: {len(python_beginner)}", file=sys.stderr)
print(f"length of python_intermediate: {len(python_intermediate)}", file=sys.stderr)
print(f"length of python_expert: {len(python_expert)}", file=sys.stderr)
print(f"length of python_algorithm: {len(python_algorithm)}", file=sys.stderr)
print(f"length of python_data_structure: {len(python_data_structure)}", file=sys.stderr)
print(f"length of python_cookbook: {len(python_cookbook)}", file=sys.stderr)

# Merge the list and make it unique
python_topics = list(
    set(python_beginner)
    | set(python_intermediate)
    | set(python_expert)
    | set(python_algorithm)
    | set(python_data_structure)
    | set(python_cookbook)
)

# Sort the merged list
python_topics = sorted(python_topics)
print(f"length of python_topics: {len(python_topics)}", file=sys.stderr)

# Save the merged list to a file
for topic in python_topics:
    print(json.dumps({"topic": topic}, ensure_ascii=False))

# print(python_topics)
